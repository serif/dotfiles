# alias file for zsh

# ———————————————————————————————————————————————————————————————————————————— #
#                                 REFRESH ZSH                                  #
# ———————————————————————————————————————————————————————————————————————————— #

zref() {
    source $ZSH/zshenv
    source $ZSH/alias
}

# ———————————————————————————————————————————————————————————————————————————— #
#                                  GNU TOOLS                                   #
# ———————————————————————————————————————————————————————————————————————————— #

# gnu ls parameters
# gls -h = --human-readable = with -l and -s, print sizes like 1K 2M 3G etc
# gls -X = --sort=extension = sort files by extension
# gls -F = --classify = append / for dirs, * for executable, etc
# gls -a = --all = do not ignore entries starting with .
# gls -A = --almost-all = do not list implied . and ..

# use gnu tools if available
if hash gls 2>/dev/null; then
    ls_cmd='gls'
else
    ls_cmd='ls'
fi
alias ls="$ls_cmd --color --group-directories-first -Xh"
alias la="$ls_cmd --color --group-directories-first -XhA"

# make mv prompt before overwriting existing file
alias mv="mv -i"

alias grep="grep --color"

# ———————————————————————————————————————————————————————————————————————————— #
#                                     GIT                                      #
# ———————————————————————————————————————————————————————————————————————————— #

got() {
    case $# in
        1)
            git add .
            git commit -m "$1"
            git push origin master
            return
            ;;
    esac

    echo "  usage: got 'commit message'"
}

update() {
    zinit update --all
    nvim +PlugInstall +PlugUpdate +UpdateRemotePlugins +qall
    # use gnu tools if available
    if hash brew 2>/dev/null; then
        brew update
        brew upgrade
        brew cleanup
    fi
    pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
    # rebuild zsh completions
    rm -f ~/.zcompdump; compinit
}

cckill() {
    sudo rm /Library/LaunchAgents/com.adobe.*
    sudo rm /Library/LaunchDaemons/com.adobe.*
    sudo pkill '[Aa]dobe|AGM|CCLib|Core Sync|Creative Cloud'
}

# scratch area
#
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

