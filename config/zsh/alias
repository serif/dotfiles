# alias file for zsh

# ———————————————————————————————————————————————————————————————————————————— #
#                                 REFRESH ZSH                                  #
# ———————————————————————————————————————————————————————————————————————————— #

zref() {
    source $ZSH/zshenv
    source $ZSH/alias
}

# ———————————————————————————————————————————————————————————————————————————— #
#                                  GNU TOOLS                                   #
# ———————————————————————————————————————————————————————————————————————————— #
#
# TODO:
# Update this section to remove the g-prefixed versions since g-prefix was
# the Homebrew way, and MacPorts instead has the same filenames in a different
# folder which I added to $PATH in zshenv

# gnu ls parameters
# -h = --human-readable = with -l and -s, print sizes like 1K 2M 3G etc
# -X = --sort=extension = sort files by extension
# -F = --classify = append / for dirs, * for executable, etc
# -a = --all = do not ignore entries starting with .
# -A = --almost-all = do not list implied . and ..

# use gnu tools if available (for mac brew, still nix compatible)
command -v gls &>/dev/null && ls_cmd='gls' || ls_cmd='ls'
command -v gmv &>/dev/null && mv_cmd='gmv' || mv_cmd='mv'
command -v gcp &>/dev/null && cp_cmd='gcp' || cp_cmd='cp'
command -v gsed &>/dev/null && cp_cmd='gsed' || sed_cmd='sed'
command -v ggrep &>/dev/null && grep_cmd='ggrep' || grep_cmd='grep'
command -v gegrep &>/dev/null && egrep_cmd='gegrep' || egrep_cmd='egrep'
command -v gmkdir &>/dev/null && mkdir_cmd='gmkdir' || mkdir_cmd='mkdir'

# not bsd compatible
alias ls="$ls_cmd --color --group-directories-first -Xh"
alias la="$ls_cmd --color --group-directories-first -XhA"
<<<<<<< HEAD
# common typo fix
alias s="$ls_cmd --color --group-directories-first -Xh"

if which gsed &> /dev/null; then
    alias sed='gsed'
fi

if which gcp &> /dev/null; then
    alias cp='gcp'
fi

# make mv prompt before overwriting existing file
alias mv="mv -i"

alias grep="grep --color"
=======
alias mv="$mv_cmd -iv"
alias cp="$cp_cmd -riv"
alias sed="$sed_cmd"
alias grep="$grep_cmd --color"
alias egrep="$egrep_cmd --color"
alias mkdir="$mkdir_cmd -vp"
#command -v gsed &>/dev/null && alias sed='gsed'
>>>>>>> 74f3e2c881666538e76745cc07c7c662f74d50f6

# ———————————————————————————————————————————————————————————————————————————— #
#                                     GIT                                      #
# ———————————————————————————————————————————————————————————————————————————— #

got() {
    if [[ $# -eq 1 ]]
    then
        git add *
        git commit -m "$1"
        git push origin master
    else
        echo "  usage: got 'commit message'"
    fi
}

# ———————————————————————————————————————————————————————————————————————————— #
#                                    Misc                                      #
# ———————————————————————————————————————————————————————————————————————————— #

# python
alias py="/usr/bin/env python3"

# neovim
if hash nvim 2>/dev/null; then
    alias vim="nvim"
    alias n="nvim"
fi

# thefuck
# eval $(thefuck --alias fuck)
# eval $(thefuck --alias FUCK)

# fucking
alias fucking="sudo"

# post file
postfile() {
    curl -F"file=@$1" https://ttm.sh
}

# shorten url
shorten() {
    curl -F"shorten=$1" https://ttm.sh
}

# reset TERM on ssh
# useful when using 'tmux-256color-italic' locally
alias ssh='TERM=xterm-256color ssh'

update() {
    # zsh
    zinit self-update
    zinit update -p --all
    # neovim
    nvim +PlugInstall +PlugUpdate +UpdateRemotePlugins +qall
    # mac brew
    if hash brew 2>/dev/null; then
        brew update
        brew upgrade
        brew cleanup
    fi
    # python
    pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
    # rebuild zsh completions
    rm -f ~/.zcompdump; compinit
}

radio() {
    if [ "$1" = "tilde" ]; then
        mpv https://radio.tildeverse.org/radio/8000/radio.ogg
    elif [ "$1" = "anon" ]; then
        mpv http://anonradio.net:8000/anonradio
    else
        echo "options: tilde|anon"
    fi
}

cckill() {
    if [ $# -eq 0 ]
    then
        # if no parameters, kill Adobe processes
        sudo pkill '[Aa]dobe|AGM|CCLib|Core Sync|Creative Cloud|CCX'
        sudo pkill 'Core Sync Helper|Creative Cloud Helper'
        sudo find /Library/LaunchAgents/ -type f -name 'com.adobe.*' -delete
        sudo find /Library/LaunchDaemons/ -type f -name 'com.adobe.*' -delete
    else
        # if parameters, remove Adobe tags from supplied file
        fiveChar=$(openssl rand -hex 20 | head -c 5)
        nineChar=$(openssl rand -hex 20 | head -c 9)
        fivePattern="s/Adobe/${fiveChar}/g"
        ninePattern="s/Photoshop/${nineChar}/g"
        sed -i "${fivePattern}" "$1"
        sed -i "${ninePattern}" "$1"
    fi
}


# scratch area
#
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

