# echo "source '~/.config/tmux/tmux.conf'" > ~/.tmux.conf

# italic support
set -g default-terminal 'tmux-256color'
#set -g default-terminal "screen-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set -as terminal-overrides ',xterm*:sitm=\E[3m'
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

# for iTerm2 shell integration as of tmux 3.3
set-option -g allow-passthrough on

# https://github.com/jimeh/tmux-themepack
#source ~/.config/tmux/tmux-themepack/powerline/Default/gray.tmuxtheme
set-option -g status-position top
set-option -g history-limit 4000
#set -g window-status-format ' #(pwd="#{pane_current_path}"; echo ${pwd####*/}):#W '
#set -g window-status-current-format ' #(~/.config/tmux/pwd-base):#W '
#set -g window-status-current-format ' #(pwd="#{pane_current_path}"; prog="#{W}"; ~/.config/tmux/pwd-base ${pwd} ${prog}) '
#setw -g automatic-rename-format "#{b:pane_current_path}"
#set -g window-status-current-format ' #(~/.config/tmux/pwd-base #{pane_current_path} #W) '

set-option -g default-command "reattach-to-user-namespace -l zsh"


# Set leader to C-m # unbind-key C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix

unbind C-b
set -g prefix C-a
bind a send-prefix

# Easy window splits
bind - split-window
bind \\ split-window -h

# Colemak hjkl equivalent
bind m select-pane -L
bind n select-pane -D
bind e select-pane -U
bind i select-pane -R

# In a 2x2 layout the commad below will
# select the diagonal from any position
bind h select-pane -L \; select-pane -U


# Colemak hjkl equivalent
bind-key -n S-m select-pane -L
bind-key -n S-n select-pane -D
bind-key -n S-e select-pane -U
bind-key -n S-i select-pane -R

# Colemak hjkl equivalent resizing
bind ^m resize-pane -L 1 \; run "tmux display-message -p '#{pane_width}'"
bind ^n resize-pane -D 1 \; run "tmux display-message -p '#{pane_height}'"
bind ^e resize-pane -U 1 \; run "tmux display-message -p '#{pane_height}'"
bind ^i resize-pane -R 1 \; run "tmux display-message -p '#{pane_width}'"

# Move windows with ctrl+shift+arrow
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Move windows with ctrl+shift+arrow
bind-key -n S-Left select-window -t -1
bind-key -n S-Right select-window -t +1

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# Mouse scroll
set -g mouse on

#these do not work
#bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe "pbcopy"
#bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "pbcopy"
#bind-key -t vi-copy 'y' copy-pipe "pbcopy"

# Plugins
# set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'o0th/tmux-nova'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'robhurring/tmux-spotify'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'ofirgall/tmux-keyboard-layout'

# Plugin settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @scroll-without-changing-pane 'on'
set -g @scroll-in-moused-over-pane 'on'
set -g @scroll-speed-num-lines-per-scroll '1'
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'


### Theme ###
################################################################################
# https://github.com/o0th/tmux-nova

set -g @nova-rows 1
set -g @nova-nerdfonts false


# Colors
########################################

selbg="#616566"
# deselbg="#535557" unused
uibg="#4D5153"
uifg="#C7C7C7"
uifgdk="#909090"
ui="$uibg $uifg"
uidk="$uibg $uifgdk"

set -g "@nova-pane-active-border-style" "$selbg"
set -g "@nova-pane-border-style" "$uibg"
set -g "@nova-status-style-bg" "$uibg"
set -g "@nova-status-style-fg" "$uifg"
set -g "@nova-status-style-active-bg" "$selbg"
set -g "@nova-status-style-active-fg" "$uifg"
set -g "@nova-status-style-double-bg" "$uibg"


# Segment definitions
########################################
# set -g @nova-segment-[arbitrary-title]

set -g @nova-padding 2

# Tab Labels (Pane)
# default: "#S:#I:#W" ⟩>
set -g @nova-pane "#I#{?pane_in_mode, #{pane_mode},} #W"

# whoami
set -g @nova-segment-left "#(whoami) ⟩ #h ⟩"
set -g @nova-segment-left-colors "$ui"

# mode
# "#{?client_prefix,tmux,cli}"
# set -g @nova-segment-right "⟨ %H%M ⟨ #(~/.config/tmux/plugins/utc) ⟨ %y%m%d"
set -g @nova-segment-right "#{?client_prefix,c:new I:refresh ^s:save ^r:restore,⟨ %H%M ⟨ #(~/.config/tmux/plugins/utc) ⟨ %y%m%d}"
set -g @nova-segment-right-colors "$ui"

# Spotify
set -g @nova-segment-spotify "⟨ #(~/.config/tmux/plugins/tmux-spotify/scripts/track.sh) ⟨ #(~/.config/tmux/plugins/tmux-spotify/scripts/artist.sh)"
set -g @nova-segment-spotify-colors "$uidk"

# Spotwo
set -g @nova-segment-weather "#(~/.config/tmux/plugins/tmux-weathercache/weather5m.py)"
set -g @nova-segment-weather-colors "$uidk"


set -g @cpu_percentage_format "%5.0f%%"
set -g @nova-segment-cpu "#(~/.config/tmux/plugins/tmux-cpu/scripts/cpu_percentage.sh)#(~/.config/tmux/plugins/tmux-cpu/scripts/ram_percentage.sh)"
set -g @nova-segment-cpu-colors "$uidk"

set -g @ram_percentage_format "%5.0f%%"
set -g @nova-segment-ram "#(~/.config/tmux/plugins/tmux-cpu/scripts/ram_percentage.sh)"
set -g @nova-segment-ram-colors "$uidk"



# Position and alignment
########################################

# Segments
set -g @nova-segments-0-left "left"
set -g @nova-segments-0-right "right"
set -g @nova-segments-1-left "weather"
set -g @nova-segments-1-center ""
set -g @nova-segments-1-right "cpu spotify"

# Tabs (left, right, centre, or absolute-centre)
set -g @nova-pane-justify "centre"

################################################################################


# Theme overridable defaults
# set -g @themepack-status-left-area-left-format "#S"
# set -g @themepack-status-left-area-middle-format "#(whoami)"
# set -g @themepack-status-left-area-right-format "#I:#P"
# set -g @themepack-status-right-area-left-format "%H:%M:%S"
# set -g @themepack-status-right-area-middle-format "%d-%b-%y"
# set -g @themepack-status-right-area-right-format "#H"
# Theme overrides
#utc="#(date -u +%H)"
set -g @themepack-status-right-area-left-format "%H:%M #(~/.config/tmux/plugins/utc)"
set -g @themepack-status-right-area-right-format "#(~/.config/tmux/plugins/host)"
# set -goqF @theme-mode-bg default
# tmux bg match terminal
# set -goqF @theme-status-left "#[fg=#{@powerline-status-left-area-left-fg},bg=#{@powerline-status-left-area-left-bg},bold] #{@themepack-status-left-area-left-format} #[fg=#{@powerline-status-left-area-left-bg},bg=#{@powerline-status-left-area-middle-bg},nobold]#[fg=#{@powerline-status-left-area-middle-fg},bg=#{@powerline-status-left-area-middle-bg}] #{@themepack-status-left-area-middle-format} #[fg=#{@powerline-status-left-area-middle-bg},bg=#{@powerline-status-left-area-right-bg}]#[fg=#{@powerline-status-left-area-right-fg},bg=#{@powerline-status-left-area-right-bg}] #{@themepack-status-left-area-right-format} #[fg=#{@powerline-status-left-area-right-bg},bg=#{default},nobold]"
# set -goqF @theme-status-right "#[fg=#{@powerline-status-right-area-left-bg},bg=#{default}]#[fg=#{@powerline-status-right-area-left-fg},bg=#{@powerline-status-right-area-left-bg}] #{@themepack-status-right-area-left-format} #[fg=#{@powerline-status-right-area-middle-bg},bg=#{@powerline-status-right-area-left-bg}]#[fg=#{@powerline-status-right-area-middle-fg},bg=#{@powerline-status-right-area-middle-bg}] #{@themepack-status-right-area-middle-format} #[fg=#{@powerline-status-right-area-right-bg},bg=#{@powerline-status-right-area-middle-bg}]#[fg=#{@powerline-status-right-area-right-fg},bg=#{@powerline-status-right-area-right-bg},bold] #{@themepack-status-right-area-right-format} "
# set -goqF @theme-window-status-current-format "#[fg=#{@theme-status-bg},bg=#{@theme-window-status-current-bg}]#[fg=#{@theme-window-status-current-fg},nobold] #{@themepack-window-status-current-format} #[fg=#{@theme-status-bg},bg=#{@theme-window-status-current-bg},nobold]"
# set -goqF @powerline-status-bg "default"


set-environment -g PATH "/opt/local/bin:$PATH"
# set-environment -g PATH "/opt/local/bin:/opt/local/sbin:/Users/av/.config/zsh/zinit/polaris/bin:/usr/local/opt/ruby/bin:/usr/local/sbin:/Users/av/bin:/Users/av/.local/bin:/opt/local/libexec/gnubin/:/opt/local/sbin:/opt/local/bin:/Users/av/.config/zsh/zinit/plugins/junegunn---fzf-bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/MacGPG2/bin:/usr/local/share/dotnet:/opt/X11/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Applications/Wireshark.app/Contents/MacOS:/Applications/kitty.app/Contents/MacOS"


# Initialize TMUX plugin manager (keep at bottom of tmux.conf)
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.config/tmux/plugins/tpm/tpm'
set -g status-bg default
